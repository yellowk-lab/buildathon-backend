# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input ClaimLootBoxInput {
  email: String!
  lootBoxId: String!
}

type Crate {
  address: String!
  id: Int!
  latitude: Float!
  longitude: Float!
  positionName: String!
  qrCode: QRCode
  qrCodeId: Int
}

input CreateEventInput {
  endDate: Timestamp!
  lootsDistribution: [LootDistribution!]!
  name: String
  password: String!
  startDate: Timestamp!
}

type Event {
  endDate: Timestamp!
  id: Int!
  lootBoxes: [LootBox!]
  name: String
  startDate: Timestamp!
}

type Loot {
  circulatingSupply: Int!
  claimedSupply: Int
  displayName: String!
  id: Int!
  lootBoxes: [LootBox!]
  name: String!
  totalSupply: Int!
}

type LootBox {
  dateOpened: Timestamp
  event: Event
  eventId: Int!
  id: ID!
  isOpened: Boolean!
  loot: Loot
  lootId: Int
  openedBy: User
  openedById: Int
  qrCode: QRCode
  qrCodeId: Int
}

input LootDistribution {
  amount: Int!
  name: String!
}

type Mutation {
  claimLootBox(claimInput: ClaimLootBoxInput!): LootBox!
  createEvent(createEventInput: CreateEventInput!): Event!
  prizeDrawRegistration(email: String!): User!
  removeUnusedLootBoxes(password: String!): String!
  scanLootBoxQRCode(scanInput: ScanQRCodeInput!): LootBox!
  sendWinEmail(sendWinEmailInput: SendWinEmailInput!): String!
}

type QRCode {
  crate: Crate
  crateId: Int
  id: Int!
  lootBoxes: [LootBox!]
  scanHistory: [QRScanEvent!]
}

type QRScanEvent {
  date: Timestamp!
  id: Int!
  latitude: Float
  longitude: Float
  qrCode: QRCode!
  qrCodeId: Int!
}

type Query {
  crate(id: Int!): Crate!
  crates(skip: Int, take: Int): [Crate!]!
  loot(id: Int!): Loot!
  lootBoxByHash(hash: String!): LootBox!
  loots: [Loot!]!
  lootsTotalSupply: Int!
  totalUnclaimedLoots: Int!
  upcomingEvent: Event!
}

input ScanQRCodeInput {
  hash: String!
  latitude: Float!
  longitude: Float!
}

input SendWinEmailInput {
  email: String!
  lootName: String!
  password: String!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type User {
  drawPrizeRegistered: Boolean!
  email: String!
  id: Int!
  openedLootBoxes: [LootBox!]
}