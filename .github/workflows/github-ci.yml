name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    env:
      GHCR_IMAGE: ghcr.io/${{ github.repository }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Build and push cache image
        run: |
          docker build --target build --cache-from $GHCR_IMAGE:${{ github.sha }}-cache -t $GHCR_IMAGE:${{ github.sha }}-cache .
          docker push $GHCR_IMAGE:${{ github.sha }}-cache
        if: github.event_name == 'push'

  release-develop:
    runs-on: ubuntu-latest
    needs: install-dependencies
    env:
      GHCR_IMAGE: ghcr.io/${{ github.repository }}
      DOCKER_REGISTRY: registry.digitalocean.com/${{ secrets.DO_REGISTRY }}
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Build and push dev image
        run: |
          docker build --pull --cache-from $GHCR_IMAGE:${{ github.sha }}-cache -t $GHCR_IMAGE:dev-${{ github.sha }} --build-arg DATABASE_URL_BUILD=${{ secrets.DATABASE_URL_DEV }} .
          docker push $GHCR_IMAGE:dev-${{ github.sha }}

      - name: Log in to DigitalOcean Registry
        run: echo ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} | docker login registry.digitalocean.com -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} --password-stdin

      - name: Tag and push to DigitalOcean Registry
        run: |
          docker tag $GHCR_IMAGE:dev-${{ github.sha }} $DOCKER_REGISTRY/dev:latest
          docker push $DOCKER_REGISTRY/dev:latest

      - name: Deploy to DigitalOcean
        run: doctl apps create-deployment ${{ secrets.DIGITALOCEAN_DEV_APP_ID }}
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

  release-uat:
    runs-on: ubuntu-latest
    needs: install-dependencies
    env:
      GHCR_IMAGE: ghcr.io/${{ github.repository }}
      DOCKER_REGISTRY: registry.digitalocean.com/${{ secrets.DO_REGISTRY }}
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Build and push uat image
        run: |
          docker build --pull --cache-from $GHCR_IMAGE:${{ github.sha }}-cache -t $GHCR_IMAGE:uat-${{ github.sha }} --build-arg DATABASE_URL_BUILD=${{ secrets.DATABASE_URL_UAT }} .
          docker push $GHCR_IMAGE:uat-${{ github.sha }}

      - name: Log in to DigitalOcean Registry
        run: echo ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} | docker login registry.digitalocean.com -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} --password-stdin

      - name: Tag and push to DigitalOcean Registry
        run: |
          docker tag $GHCR_IMAGE:uat-${{ github.sha }} $DOCKER_REGISTRY/uat:latest
          docker push $DOCKER_REGISTRY/uat:latest

      - name: Deploy to DigitalOcean
        run: doctl apps create-deployment ${{ secrets.DIGITALOCEAN_UAT_APP_ID }}
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

  release-prod:
    runs-on: ubuntu-latest
    needs: install-dependencies
    env:
      GHCR_IMAGE: ghcr.io/${{ github.repository }}
      DOCKER_REGISTRY: registry.digitalocean.com/${{ secrets.DO_REGISTRY }}
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Build and push prod image
        run: |
          docker build --pull --cache-from $GHCR_IMAGE:${{ github.sha }}-cache -t $GHCR_IMAGE:prod-${{ github.sha }} --build-arg DATABASE_URL_BUILD=${{ secrets.DATABASE_URL_PROD }} .
          docker push $GHCR_IMAGE:prod-${{ github.sha }}

      - name: Log in to DigitalOcean Registry
        run: echo ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} | docker login registry.digitalocean.com -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} --password-stdin

      - name: Tag and push to DigitalOcean Registry
        run: |
          docker tag $GHCR_IMAGE:prod-${{ github.sha }} $DOCKER_REGISTRY/prod:latest
          docker push $DOCKER_REGISTRY/prod:latest

      - name: Deploy to DigitalOcean
        run: doctl apps create-deployment ${{ secrets.DIGITALOCEAN_PROD_APP_ID }}
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
